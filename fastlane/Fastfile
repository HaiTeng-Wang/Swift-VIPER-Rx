# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.3.0"

default_platform :ios

build_number = Time.now.utc.strftime("%y%m%d.%H%M")

platform :ios do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
    cocoapods

  end

  desc "Runs all the tests"
  lane :test do
    scan
  end


  lane :build do
    match(type: "appstore")
    ensure_git_branch
    ensure_git_status_clean
    reset_git_repo
    update_build_number
    commit_version_bump message: "Deploying version #{build_number}."
    push_to_git_remote(
      remote: "origin",         # optional, default: "origin"
      remote_branch: "master", # optional, default is set to local_branch
      force: false,    # optional, default: false
      tags: false     # optional, default: true
    )

    #cert
    #sigh
    #gym(scheme: "xjf-ios-mvvm") # Build your app - more options available

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    match(type: "appstore")
    ensure_git_status_clean
    update_build_number
    # commit_version_bump message: "Deploying version #{build_number}."
    # push_to_git_remote

    cert
    sigh
    gym(scheme: "xjf-ios-mvvm") # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    match(type: "appstore")
    ensure_git_status_clean
    update_build_number
    cert
    sigh
    gym(scheme: "xjf-ios-mvvm") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    slack(

      message: "Successfully deployed new App Update."
    )
  end

  error do |lane, exception|
    slack(
       message: exception.message,
       success: false
     )
  end

  private_lane :update_build_number do
    increment_build_number build_number: build_number
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
